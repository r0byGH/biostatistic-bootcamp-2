ls()
pwd()
getwd()
find.package("devtools")
find.package("tools")
install.packages("devtools")
library("devtools", lib.loc="C:/Users/r0by/Documents/R/win-library/3.1")
find.package("tools")
find.package("devtools")
library(devtools)
ls()
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
ls()
ls(package:KernSmooth)
ls(package:devtools)
ls("package:devtools"")
""
ls("package:devtools")
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
z<-10
z
f(3)
f <- function(x) {
+     g <- function(y) {
+         y + z
+     }
+     x <- 3
+     x + g(x)
+ }
f <- function(x) {
+     g <- function(y) {
+         y + z
+     }
+     z <- 4
+     x + g(x)
+ }
f
function(x) {
g <- function(y) {
y + z
}
x <- 3
x + g(x)
}
f
f <- function(x) {
g <- function(y) {
y + z
}
x <- 3
x + g(x)
}
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x
y
clear
clear()
clean()
d = 3L
d
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
install.packages("actuar")
set.seed(1)
rpois(5, 2)
qexp(0.5, rate = 0.5)
pexp(qexp(0.5, rate = 0.5), rate = 0.5)
log(0.5)
sqrt(-log(0.5))
pnorm(70, mean=80, sd=10)
pnorm(70, mean=80, sd=10, lower.tail = FALSE)
qnorm(.95, mean=1100, sd=75)
pbinom(1, 1, .5)
pbinom(2, 1, .5)
pbinom(1, 2, .5)
pbinom(1, size=1, prob=.5)
dbinom(4, size=12, prob=0.2) +  dbinom(5, size=12, prob=0.2)
pnorm(16, mean=15, sd=10) - pnorm(14, mean=15, sd=10)
75/(1-52)
75/(100-52)
75/(100-52) * 30/70
.67/(1+.67)
.67/(1+.67)*100
qnorm(.95, mean=1100, sd=7.5)
qnorm(.975, mean=1100, sd=7.5)
pnorm(90, mean=80, sd=10, lower.tail = FALSE)
pnorm(90, mean=80, sd=10, lower.tail = FALSE) * 6
pnorm(.01)
1 - pnorm(.01, lower.tail = FALSE) * 2
pnorm(.01, lower.tail = FALSE)
pnorm(-.01, lower.tail = FALSE)
pnorm(-.01, lower.tail = true)
pnorm(-.01)
1 - pnorm(1, lower.tail = FALSE) * 2
pnorm(90, mean=80, sd=10, lower.tail = FALSE)
p <- pnorm(90, mean=80, sd=10, lower.tail = FALSE)
5 * p^4 + p^5
10/sqrt(5)
s <- 10/sqrt(5)
p <- pnorm(90, mean=80, sd=s, lower.tail = FALSE)
5 * p^4 + p^5
p <- pnorm(90, mean=80, sd=10, lower.tail = FALSE)
p
p^4
p^4 * 5
qnorm(.5, mean= 0, sd=.1)/qnorm(.5, mean= 0, sd=.01)
qnorm(1, mean= 0, sd=.1)/qnorm(1, mean= 0, sd=.01)
qnorm(1, mean= 0, sd=.1)
qnorm(.95, mean= 0, sd=.1)
qnorm(.95, mean= 0, sd=.01)
qnorm(.95, mean= 0, sd=.1)/qnorm(.95, mean= 0, sd=.01)
qnorm(.8, mean= 0, sd=.1)/qnorm(.8, mean= 0, sd=.01)
qnorm(.7, mean= 0, sd=.1)/qnorm(.7, mean= 0, sd=.01)
qnorm(.5, mean= 0, sd=.01)
qnorm(.51, mean= 0, sd=.01)
qnorm(.48, mean= 0, sd=.01)
qnorm(.7, mean= 0, sd=.25)/qnorm(.7, mean= 0, sd=.5)
sqrt(16)/sqrt(4)
sqrt(4)/sqrt(16)
library(datasets)
hist(airquality$Ozone)
with(airquality, plot(Wind, Ozone))
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
htmlCode
htmlCode[10]
htmlCode[10,]
htmlCode[1]
htmlCode[0]
htmlCode[1]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
setwd("C:/CLOUD/Google Drive/@Personal - education/big-bang")
r <- 28000
pi
c <- 2*pi*r
vks <- 220
vlight <- 300000
kyl <- vlight * 3600 * 24 * 365
teyl <- kyl / vks
teyl_y <- tely / (3600 * 24 * 365)
teyl_y <- teyl / (3600 * 24 * 365)
t_orbit <- teyl_y * c
eage <- 4.6 * 10^9
eage_gy <- eage / t_orbit
dkm <- 19182354753
dlh <- dkm / (300000 * 3600)
c <- 300000000 # in m/s
r <- 1 #dog 1 meter long
G <- 6.67 * 10 ^ (-11) # costant of gravity
M = c ^ 2 * r /  2 * G
M
G
M = c ^ 2 * r /  (2 * G)
setwd("C:/CLOUD/Google Drive/@Personal - education/biostatistic-bootcamp-2")
qnorm(.95)
xval <- seq(-3.2, 3.2, length = 1000)
yval<- dnorm(xval)
plot(xval, yval, type = "l", axes = TRUE, frame = FALSE, lwd = 3, xlab = "", ylab = "")
x <- seq(qnorm(.95), 3.2, length = 100)
polygon(c(x, rev(x)),c(dnorm(x), rep(0, length(x))), col = "salmon")
text(mean(x), mean(dnorm(x))+.02, "5%", cex = 2)
text(qnorm(.95), .01, "1.645", cex = 2)
install.packages("bsda")
install.packages("BSDA")
library("BSDA", lib.loc="C:/Users/r0by/Documents/R/win-library/3.1")
zalpha <- qnorm(.95)
mu = 12
sd = 4
n = 100
zalpha <- qnorm(.95)
mu = 12
sd = 4
n = 100
climit <- zalpha * sd / sqrt(n) + mu
zalpha <- qnorm(.05)
mu = 12
sd = 4
n = 100
# P( x <= C | mu = 12) is equivalent to
# P[ z <= cost - 12 / (sigma / sqrt(n)] = 0.05
# value of z is exactly zalpha hence
# zalpha <= (cost - mu) * sqrt(n) / sd
# so c > climit
climit <- zalpha * sd / sqrt(n) + mu
xval <- seq(-3.2, 3.2, length = 1000)
yval<- dnorm(xval)
plot(xval, yval, type = "l", axes = TRUE, frame = FALSE, lwd = 3, xlab = "", ylab = "")
x <- seq(qnorm(.95), 3.2, length = 100)
polygon(c(x, rev(x)),c(dnorm(x), rep(0, length(x))), col = "salmon")
text(mean(x), mean(dnorm(x))+.02, "5%", cex = 2)
text(qnorm(.95), .01, "1.645", cex = 2)
xval <- seq(-3.2, 3.2, length = 1000)
yval<- dnorm(xval)
plot(xval, yval, type = "l", axes = TRUE, frame = FALSE, lwd = 3, xlab = "", ylab = "")
x <- seq(qnorm(.05), 3.2, length = 100)
polygon(c(x, rev(x)),c(dnorm(x), rep(0, length(x))), col = "salmon")
x <- seq(3.2, qnorm(.05), length = 100)
polygon(c(x, rev(x)),c(dnorm(x), rep(0, length(x))), col = "salmon")
xval <- seq(-3.2, 3.2, length = 1000)
yval<- dnorm(xval)
plot(xval, yval, type = "l", axes = TRUE, frame = FALSE, lwd = 3, xlab = "", ylab = "")
x <- seq(3.2, qnorm(.05), length = 100)
polygon(c(x, rev(x)),c(dnorm(x), rep(0, length(x))), col = "salmon")
xval <- seq(-3.2, 3.2, length = 1000)
yval<- dnorm(xval)
plot(xval, yval, type = "l", axes = TRUE, frame = FALSE, lwd = 3, xlab = "", ylab = "")
x <- seq(3.2, qnorm(.05), length = 100)
polygon(x,dnorm(x), col = "salmon")
xval <- seq(-3.2, 3.2, length = 1000)
yval<- dnorm(xval)
plot(xval, yval, type = "l", axes = TRUE, frame = FALSE, lwd = 3, xlab = "", ylab = "")
x <- seq(3.2, qnorm(.05), length = 100)
polygon(c(x, rev(x)),c(dnorm(x), rep(0, length(x))), col = "salmon")
xval <- seq(-3.2, 3.2, length = 1000)
yval<- dnorm(xval)
plot(xval, yval, type = "l", axes = TRUE, frame = FALSE, lwd = 3, xlab = "", ylab = "")
x <- seq(-3.2, qnorm(.05), length = 100)
polygon(c(x, rev(x)),c(dnorm(x), rep(0, length(x))), col = "salmon")
text(qnorm(.05), .01, qnorm(.05), cex = 2)
text(0, dnorm(0) / 5, "95%", cex = 2)
text(qnorm(.05), .01, round(qnorm(.05), digits=2), cex = 2)
xval <- seq(-3.2, 3.2, length = 1000)
yval<- dnorm(xval)
plot(xval, yval, type = "l", axes = TRUE, frame = FALSE, lwd = 3, xlab = "", ylab = "")
x <- seq(-3.2, qnorm(.05), length = 100)
polygon(c(x, rev(x)),c(dnorm(x), rep(0, length(x))), col = "salmon")
text(qnorm(.05), .01, round(qnorm(.05), digits=2), cex = 2)
text(0, dnorm(0) / 5, "95%", cex = 2)
g1 <- c(140, 138, 150,148,135)
g2 <- c(138,136,148,146,133)
difference = g1 - g2
mu <- mean(difference)
s <- sd(difference)
n <- 5
#condifence interval
mu + c(-1,1) * s * qt(.975, n-1) / sqrt(n)
t.test(difference)
t.test(difference)$conf.interval
g1 <- c(140, 138, 150,148,135)
g2 <- c(138,136,148,146,132)
difference = g1 - g2
t.test(difference)$conf.int
t.test(g1, g2, alternative="two.sided",paired=FALSE)
g1 <- c(140, 138, 150,148,135)
g2 <- c(138,136,148,146,133)
difference = g1 - g2
t.test(g1, g2, alternative="two.sided",paired=FALSE)
t.test(g1, g2, alternative="two.sided",paired=FALSE, conf.level=0.9)
t.test(g1, g2, paired=FALSE)
g1 <- c(2.233, -2.513,    1.204,	1.938,	2.533)
g2 <- c(0.929,  -1.745,	1.677,	0.701,	0.128)
difference = g2 - g1
t.test(difference, alternative="less")
t.test(g1)
t.test(g1, conf.level = .975)
